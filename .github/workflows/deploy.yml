name: Deploy Project

on:
  push:
    branches:
      - main

jobs:
  # test_node:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout repository
  #       uses: actions/checkout@v4

  #     - name: Add SSH key
  #       uses: webfactory/ssh-agent@v0.5.4
  #       with:
  #         ssh-private-key: ${{secrets.EC2_KEY}}

  #     - name: Ensure SSH directory exists
  #       run: |
  #         mkdir -p ~/.ssh
  #         chmod 700 ~/.ssh

  #     - name: Add SSH known hosts
  #       run: ssh-keyscan -H ${{secrets.EC2_HOST}} >> ~/.ssh/known_hosts

  #     - name: test node
  #       run: |
  #         ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
  #         export NVM_DIR="$HOME/.nvm"
  #         if [ -s "$NVM_DIR/nvm.sh" ]; then
  #           . "$NVM_DIR/nvm.sh"
  #         else
  #         echo "nvm.sh not found"
  #         exit 1
  #         fi

  #         nvm -v
  #         nvm use --lts
  #         node -v
  #         npm -v'

  # test_mysql:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout repository
  #       uses: actions/checkout@v4

  #     - name: Add SSH key
  #       uses: webfactory/ssh-agent@v0.5.4
  #       with:
  #         ssh-private-key: ${{secrets.EC2_KEY}}

  #     - name: Ensure SSH directory exists
  #       run: |
  #         mkdir -p ~/.ssh
  #         chmod 700 ~/.ssh

  #     - name: Add SSH known hosts
  #       run: ssh-keyscan -H ${{secrets.EC2_HOST}} >> ~/.ssh/known_hosts

  #     - name: test mysql
  #       run: |
  #         ssh ${{secrets.EC2_USER}}@${{secrets.EC2_HOST}} '
  #         sudo service mysql status'

  #     - name: test mysql user
  #       run: |
  #         ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
  #         mysql -u ${{ secrets.MYSQL_USER }} -p${{ secrets.MYSQL_PASSWORD }} -e "SHOW DATABASES;"'

  # test_mongo:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout repository
  #       uses: actions/checkout@v4

  #     - name: Add SSH key
  #       uses: webfactory/ssh-agent@v0.5.4
  #       with:
  #         ssh-private-key: ${{secrets.EC2_KEY}}

  #     - name: Ensure SSH directory exists
  #       run: |
  #         mkdir -p ~/.ssh
  #         chmod 700 ~/.ssh

  #     - name: Add SSH known hosts
  #       run: ssh-keyscan -H ${{secrets.EC2_HOST}} >> ~/.ssh/known_hosts

  #     - name: check mongo
  #       run: |
  #         ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
  #         sudo service mongod status'

  #     - name: test mongo user
  #       run: |
  #         ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
  #         mongosh -u ${{ secrets.MONGO_USER }} -p ${{ secrets.MONGO_PASSWORD }} \
  #         --authenticationDatabase admin -eval "db.adminCommand({ listDatabases:1 })"'

  reset_dir:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{secrets.EC2_KEY}}

      - name: Ensure SSH directory exists
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

      - name: Add SSH known hosts
        run: ssh-keyscan -H ${{secrets.EC2_HOST}} >> ~/.ssh/known_hosts

      - name: ReMake dir
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
            rm -rf /var/www/twoProject
            mkdir /var/www/twoProject
            mkdir /var/www/twoProject/imgs
            mkdir /var/www/twoProject/static
            mkdir /var/www/twoProject/static/css
            mkdir /var/www/twoProject/static/js'

  deploy_front:
    runs-on: ubuntu-latest
    needs:
      - reset_dir
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{secrets.EC2_KEY}}

      - name: Ensure SSH directory exists
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

      - name: Add SSH known hosts
        run: ssh-keyscan -H ${{secrets.EC2_HOST}} >> ~/.ssh/known_hosts

      - name: Make a Env
        working-directory: ./front
        run: |
          ${{ secrets.FRONT_ENV }}

      - name: Install Dependencies of Front
        working-directory: ./front
        run: npm i

      # 추가부분
      - name: Build Front
        working-directory: ./front
        run: |
          npm run build
          find build/static/css -type f -name '*.map' -delete
          find build/static/js -type f -name '*.map' -delete

      - name: Copy Files to EC2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
            mkdir /var/www/twoProject/front'
          rsync -avz -e "ssh" ./front/build/ ${{ secrets.EC2_USER}}@${{secrets.EC2_HOST}}:/var/www/twoProject/front
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} '
            mv /var/www/twoProject/front/static/css/* /var/www/twoProject/static/css
            rm -rf /var/www/twoProject/front/static/css
            mv /var/www/twoProject/front/static/js/* /var/www/twoProject/static/js
            rm -rf /var/www/twoProject/front/static/js
            mv -f /var/www/twoProject/front/imgs/* /var/www/twoProject/imgs
            rm -rf /var/www/twoProject/front/imgs'

      - name: Restart Nginx
        run: ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} 'sudo service nginx restart'
